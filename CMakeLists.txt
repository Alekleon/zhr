cmake_minimum_required(VERSION 3.5)

set(ZHR_PROJECT zhr)
project (${ZHR_PROJECT})

#MESSAGE ("PROJECT_NAME: " ${PROJECT_NAME})
#MESSAGE ("PROJECT_SOURCE_DIR: " ${PROJECT_SOURCE_DIR})
#MESSAGE ("PROJECT_BINARY_DIR: " ${PROJECT_BINARY_DIR})

set(CMAKE_CONFIGURATION_TYPES Debug Release)
#MESSAGE ("CMAKE_CONFIGURATION_TYPES: " ${CMAKE_CONFIGURATION_TYPES})

# Setting output directories.
set(OS_PLATFORM "${CMAKE_SYSTEM_NAME}_${CMAKE_SYSTEM_PROCESSOR}")
set(OUTPUT_DIR "${PROJECT_SOURCE_DIR}/Distrib/${OS_PLATFORM}/${CMAKE_BUILD_TYPE}")

#MESSAGE ("OS_PLATFORM: " ${OS_PLATFORM})
#MESSAGE ("OUTPUT_DIR: " ${OUTPUT_DIR}\n)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${OUTPUT_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPUT_DIR}/bin")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_DIR}/bin")

set(ZHR_HEADER_FILES
	zhrf.h
) 

set(ZHR_SOURCE_FILES
	zhrf.cpp
)

if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17" )
#else()
#	assign_source_group(${ZHR_HEADER_FILES} ${ZHR_SOURCE_FILES})
endif()

add_subdirectory(zhr_lib)

add_executable( ${PROJECT_NAME} 
	${ZHR_HEADER_FILES}
	${ZHR_SOURCE_FILES}
)

#target_include_directories( ${PROJECT_NAME} PUBLIC
#	./zhr_lib
#	./zhr_lib/Includes
#)

target_link_libraries( ${PROJECT_NAME} zhr_lib )
target_link_libraries( ${PROJECT_NAME} ${CMAKE_THREAD_LIBS_INIT} )

